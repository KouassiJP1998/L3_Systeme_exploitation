/* shm-message.h */
#ifndef SHM_MESSAGE_H
#define SHM_MESSAGE_H
/**
* constant SHM_MESSAGE_NAME_SIZE
* description the size of the message name
*/
#define SHM_MESSAGE_NAME_SIZE 16
/**
* constant SHM_MESSAGE_TEXT_SIZE
* description the size of the message text
*/
#define SHM_MESSAGE_TEXT_SIZE 64
/**
* structure shm_message_t
* description a message
* member name the message name
* member text the message text
*/
typedef struct
{
	char name[SHM_MESSAGE_NAME_SIZE];
	char text[SHM_MESSAGE_TEXT_SIZE];
} shm_message_t;
/**
* function shm_message_copy
* description copy a source message to a target message
* parameter message_source the source message
* parameter message_target the target message
* return -1 on error (i.e., if the target message is not empty, the shm_message_set_name function
returns -1 or the shm_message_set_text function returns -1), else 0
*/
int shm_message_copy(shm_message_t message_source, shm_message_t *message_target);
/**
* function shm_message_empty
* description empty a message (i.e., set the message name and the message text to an empty string)
* parameter message the message
* return nothing
*/
void shm_message_empty(shm_message_t *message);
/**
* function shm_message_is_empty
* description check if a message is empty (i.e., check if the message name and the message text are an
empty string)
* parameter message the message
* return 1 if the message is empty, else 0
*/
int shm_message_is_empty(shm_message_t message);
/**
* function shm_message_print
* description print a message using the "YYYY-MM-DD HH:MM:SS: name: text" format
* parameter message the message
* return nothing
*/
void shm_message_print(shm_message_t message);
/**
* function shm_message_set_name
* description set the name of a message
* parameter message the message
* parameter name the name
* return -1 on error (if the message name size is greater than SHM_MESSAGE_NAME_SIZE), else 0
*/
int shm_message_set_name(shm_message_t *message, const char *name);
/**
* function shm_message_set_text
* description set the text of a message
* parameter message the message
* parameter text the text
* return -1 on error (if the message text size is greater than SHM_MESSAGE_TEXT_SIZE), else 0
*/
int shm_message_set_text(shm_message_t *message, const char *text);
#endif